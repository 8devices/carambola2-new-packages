From 138eabe09df56d2caa08afd0ececfb8292473e82 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Edvinas=20Stun=C5=BE=C4=97nas?=
 <edvinas.stunzenas@gmail.com>
Date: Thu, 3 May 2018 11:24:41 +0300
Subject: [PATCH] jansson: add flag for simple real output

---
 src/dump.c            | 4 ++--
 src/jansson.h         | 3 ++-
 src/jansson_private.h | 2 +-
 src/strconv.c         | 8 ++++++--
 4 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/src/dump.c b/src/dump.c
index 79cb2f2..e432e99 100644
--- a/src/dump.c
+++ b/src/dump.c
@@ -23,7 +23,7 @@
 #define MAX_REAL_STR_LENGTH     100
 
 #define FLAGS_TO_INDENT(f)      ((f) & 0x1F)
-#define FLAGS_TO_PRECISION(f)   (((f) >> 11) & 0x1F)
+#define FLAGS_TO_PRECISION(f)   (((f) >> 12) & 0x1F)
 
 struct object_key {
     size_t serial;
@@ -212,7 +212,7 @@ static int do_dump(const json_t *json, size_t flags, int depth,
             double value = json_real_value(json);
 
             size = jsonp_dtostr(buffer, MAX_REAL_STR_LENGTH, value,
-                                FLAGS_TO_PRECISION(flags));
+                                FLAGS_TO_PRECISION(flags), flags & JSON_REAL_SIMPLE);
             if(size < 0)
                 return -1;
 
diff --git a/src/jansson.h b/src/jansson.h
index b06ab9c..d255672 100644
--- a/src/jansson.h
+++ b/src/jansson.h
@@ -267,7 +267,8 @@ json_t *json_load_callback(json_load_callback_t callback, void *data, size_t fla
 #define JSON_PRESERVE_ORDER     0x100
 #define JSON_ENCODE_ANY         0x200
 #define JSON_ESCAPE_SLASH       0x400
-#define JSON_REAL_PRECISION(n)  (((n) & 0x1F) << 11)
+#define JSON_REAL_SIMPLE        0x800
+#define JSON_REAL_PRECISION(n)  (((n) & 0x1F) << 12)
 
 typedef int (*json_dump_callback_t)(const char *buffer, size_t size, void *data);
 
diff --git a/src/jansson_private.h b/src/jansson_private.h
index e100726..d5cbbea 100644
--- a/src/jansson_private.h
+++ b/src/jansson_private.h
@@ -81,7 +81,7 @@ void jsonp_error_vset(json_error_t *error, int line, int column,
 
 /* Locale independent string<->double conversions */
 int jsonp_strtod(strbuffer_t *strbuffer, double *out);
-int jsonp_dtostr(char *buffer, size_t size, double value, int prec);
+int jsonp_dtostr(char *buffer, size_t size, double value, int prec, int simple);
 
 /* Wrappers for custom memory functions */
 void* jsonp_malloc(size_t size);
diff --git a/src/strconv.c b/src/strconv.c
index c3563b9..9788a2f 100644
--- a/src/strconv.c
+++ b/src/strconv.c
@@ -79,7 +79,7 @@ int jsonp_strtod(strbuffer_t *strbuffer, double *out)
     return 0;
 }
 
-int jsonp_dtostr(char *buffer, size_t size, double value, int precision)
+int jsonp_dtostr(char *buffer, size_t size, double value, int precision, int simple)
 {
     int ret;
     char *start, *end;
@@ -88,7 +88,11 @@ int jsonp_dtostr(char *buffer, size_t size, double value, int precision)
     if (precision == 0)
         precision = 17;
 
-    ret = snprintf(buffer, size, "%.*g", precision, value);
+    if (!simple) {
+        ret = snprintf(buffer, size, "%.*g", precision, value);
+    } else {
+        ret = snprintf(buffer, size, "%.*f", precision, value);
+    }
     if(ret < 0)
         return -1;
 
-- 
2.15.1

